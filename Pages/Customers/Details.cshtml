@page
@model Fribergs_rentals_2.Pages.Customers.DetailsModel
@using Models

@{
    ViewData["Title"] = "Details";
}

<h1>Min sida</h1>

<div class="short-dl">
    <h4>@Model.Customer.FirstName @Model.Customer.LastName</h4>
    <hr />
    <dl>
        <dt>
            @Html.DisplayNameFor(model => model.Customer.FirstName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Customer.FirstName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Customer.LastName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Customer.LastName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Customer.BirthDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Customer.BirthDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Customer.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Customer.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Customer.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Customer.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Customer.PhoneNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Customer.PhoneNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Customer.Password)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Customer.Password)
        </dd>
    </dl>
</div>

<div>
    <table>
            <thead>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Bookings[0].BookingId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Bookings[0].BookedCar.Maker)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Bookings[0].BookedCar.Mod)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Bookings[0].PickUpDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Bookings[0].ReturnDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Bookings[0].TotalSum)
            </th>
            <th>
                Ändra Bokning
            </th>
            </thead>
        <tbody>
            @if (Model.Customer.Bookings != null)
            {
                foreach (var b in Model.Customer.Bookings.OrderByDescending(b => b.PickUpDate))
                {
                    <tr>
                        <td>
                            @b.BookingId
                        </td>
                        <td>
                            @b.BookedCar.Maker
                        </td>
                        <td>
                            @b.BookedCar.Mod
                        </td>
                        <td>
                            @b.PickUpDate
                        </td>
                        <td>
                            @b.ReturnDate
                        </td>
                        <td>
                            @b.TotalSum
                        </td>
                        @if (b.PickUpDate > DateTime.Now)
                        {
                            <td>
                                <a asp-page="/Bookings/Edit" asp-route-Id="b.BookingId">Ändra</a>
                            </td>
                        }
                        else
                        {
                            <td>
                                Arkiverad
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div>
    @{
        var currentUser = Helpers.RetrieveUserFromCookie(HttpContext.Session);
    }
    @if (currentUser is Administrator)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Customer.CustomerId">Ändra</a>
        <a asp-page="./Index">Tillbaka till lista</a>
    }
</div>
